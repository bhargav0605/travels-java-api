spring.application.name=Travels Java API
spring.profiles.active=dev
spring.main.banner-mode=off

#Configuring application datasource
spring.datasource.url=${DATABASE_URL}
#spring.datasource.url=jdbc:postgresql://192.168.1.8:5432/postgres
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

#configuring jpa properties
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=trace

#configuring ehcache path
spring.cache.jcache.config=classpath:cache/ehcache.xml

#excluding thymeleaf configurations
spring.thymeleaf.check-template-location=false

#configuring springmvc resources
spring.mvc.throw-exception-if-no-handler-found=true
spring.mvc.resources.add-mappings=false

#Configuring API pagination
#Maximum page size to be accepted
spring.data.web.pageable.max-page-size=100
#Page index parameter name
spring.data.web.pageable.page-parameter=page 
#Page size parameter name
spring.data.web.pageable.size-parameter=size 

#configuring jwt secret
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

#configuring API version
release.version=5.0.0
api.version=2020-12-29
api.key=${API_KEY}

#enable response compression
server.compression.enabled=${SERVER_COMPRESSION}

#minimum response where compression will kick in
server.compression.min-response-size=${MIN_RESPONSE_SIZE}

#mime types that should be compressed
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

#configuring spring boot admin client
server.url=http://localhost
server.admin.port=9090
server.client.port=8080

spring.boot.admin.client.url=${server.url}:${server.admin.port}
spring.boot.admin.client.instance.serviceBaseUrl=${server.url}:${server.client.port}
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

#configuration to give secured server info
spring.boot.admin.client.instance.metadata.user.name=${spring.boot.admin.client.username}
spring.boot.admin.client.instance.metadata.user.password=${spring.boot.admin.client.password}

management.endpoints.web.base-path=/manage
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
